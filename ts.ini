# Файл: ts.ini
# Это конфигурационный файл для Docker-контейнера ksey/torrserver.
# Поместите этот файл в директорию "../db" контейнера, раскомментируйте нужные опции и перезапустите контейнер.

# Какую версию TorrServer использовать. Возможные варианты: "latest", "MatriX.111", "MatriX.110", "1.2.80_beta7.1" и так далее...
# По умолчанию: "latest".
TS_RELEASE="latest"

# Порт сервера. По умолчанию: "8090"
TS_PORT="8090"

# Дополнительные опции. По умолчанию: пусто (без опций)
# Примеры опций:
# -r - запуск в режиме только для чтения базы данных
# -a - включение HTTP-авторизации для всех запросов
#
# Чтобы включить авторизацию:
# 1) Раскомментируйте и установите TS_OPTIONS="-a"
# 2) Установите логин/пароль в файле ../db/accs.db
# 3) Перезапустите контейнер
#
TS_OPTIONS="-a -r"

# Обновлять ли текущую версию TorrServer до версии, указанной в TS_RELEASE. По умолчанию: "true"
TS_UPDATE="true"

# Обновлять ли ОС Linux (только при загрузке). По умолчанию: "true"
LINUX_UPDATE="true"

# Источник для автоматического обновления списка блокировки IP (bip.txt). Список блокировки — это сторонний список IP-адресов, которые нужно блокировать.
# Это может быть полезно для блокировки пиров, чьи адреса, как считается, принадлежат компаниям, замеченным в анти-P2P активности.
# Раскомментируйте любую строку, чтобы включить автоматическое обновление через cron. По умолчанию: пусто (не обновляется).
BIP_URL="https://upd.emule-security.org/ipfilter.zip"
# или
# BIP_URL="https://mirror.codebucket.de/transmission/blocklist.p2p.gz"

# Задача cron для автоматического обновления TorrServer и черного списка IP. По умолчанию: пусто (без автоматического обновления).
# Пример: запускать задачи обновления каждый день в 4:20 утра:
cron_task="20 4 * * *"
